#!/bin/bash

drb_run ()
{
  # run "cmd" on "target"
  this_cmd="$1"
  shift
  these_targets="$*"

  for this_tgt in $these_targets; do
    _run_chain "$this_cmd" "$this_tgt"
  done
}

drb_copy_vars_from ()
{
# ! we aught to support :p from platform copies (e.g. generic, + platform-generic, + c1)
# AND to $platform (where $platform is the current context's platform)

  # check if "$1:platform"

  if [ "$#" -lt 1 ]; then
    echo "in: ${target_dir}/${_drb_impl_file}"
    echo "error: drb_copy_variables_from takes at least 1 arguments: \"target\""
    exit 1
  fi
  base_tgt="$1"
  _base_codename="$(_lookup_codename "$base_tgt")"
  shift
  if [ "$1" ]; then
    base_vars="$*"
  else
    base_vars="$_drb_api_copy_vars
$(eval "echo \"\$vars_${_base_codename}\"")"
  fi

  for var in $base_vars; do
    eval "${var}_${platform}=\"$(echo \"\$${var}_${_base_codename}\")\""
  done

  base_user_vars="$(echo "$base_vars" | grep -v -x -F "$_drb_api_vars")"
  for user_var in $base_user_vars; do
    echo "$vars" | grep -q "$user_var" || vars="$vars $user_var"
  done
  vars="${vars# }"
}

drb_copy_funcs_from ()
{
# ! we aught to support :p from platform copies (e.g. generic, + platform-generic, + c1)
# AND to $platform (where $platform is the current context's platform)

  if [ "$#" -lt 1 ]; then
    echo "in: ${target_dir}/${_drb_impl_file}"
    echo "error: drb_copy_functions_from takes at least 1 arguments: \"target\""
    exit 1
  fi
  base_tgt="$1"
  _base_codename="$(_lookup_codename "$base_tgt")"

  shift
  if [ "$1" ]; then
    base_funcs="$*"
  else
    base_funcs="$_drb_api_cmds_expanded
$(eval "echo \"\$funcs_${_base_codename}\"")"
  fi

  for func in $base_funcs; do
    _copy_function "${func}_${_base_codename}" "$func"
  done

  base_user_funcs="$(echo "$base_funcs" | grep -v -x -F "$_drb_api_cmds_expanded")"
  for user_func in $base_user_funcs; do
    echo "$funcs" | grep -q "$user_func" || funcs="$funcs $user_func"
  done
  funcs="${funcs# }"
}

fetch ()
{
  _api_run_cmd "fetch" "$@"
}

sync ()
{
  _api_run_cmd "sync" "$@"
}

build ()
{
  _api_run_cmd "build" "$@"
}

assemble ()
{
  _api_run_cmd "assemble" "$@"
}



