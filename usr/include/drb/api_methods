#!/bin/bash

drb_run ()
{
  # run "cmd" on "target"
  this_cmd="$1"
  shift
  these_targets="$*"

  for this_tgt in $these_targets; do
    _run_chain "$this_cmd" "$this_tgt"
  done
}

drb_copy_variables_from ()
{
  if [ "$#" -lt 1 ]; then
    echo "in: ${target_dir}/${_drb_impl_file}"
    echo "error: drb_copy_variables_from takes at least 1 arguments: \"target\""
    exit 1
  fi
  base_tgt="$1"
  _base_codename="$(_lookup_codename "$base_tgt")"
  shift
  if [ "$1" ]; then
    base_vars="$*"
  else
    base_vars="$(eval "echo \"\$vars_${_base_codename}\"")"
  fi

  for v in $base_vars; do
    vars="$vars $v" # add to our 'vars' variable
    eval "$v=\$v_${_base_codename}"
  done
}

drb_copy_functions_from ()
{
  if [ "$#" -lt 1 ]; then
    echo "in: ${target_dir}/${_drb_impl_file}"
    echo "error: drb_copy_functions_from takes at least 1 arguments: \"target\""
    exit 1
  fi
  base_tgt="$1"
  _base_codename="$(_lookup_codename "$base_tgt")"

  shift
  if [ "$1" ]; then
    base_funcs="$*"
  else
    base_funcs="$_drb_api_cmds $(eval "echo \"\$funcs_${_base_codename}\"")"
  fi

  for api_func in $base_funcs; do
    _copy_function "${api_func}_${_base_codename}" "$api_func"
  done
}

drb_copy_vars_from ()
{
  drb_copy_variables_from "$@"
}

drb_copy_funcs_from ()
{
  drb_copy_functions_from "$@"
}

fetch ()
{
  _api_run_cmd "fetch" "$@"
}

sync ()
{
  _api_run_cmd "sync" "$@"
}

build ()
{
  _api_run_cmd "build" "$@"
}

assemble ()
{
  _api_run_cmd "assemble" "$@"
}



